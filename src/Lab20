
0. create table student (
     id int auto_increment not null primary key, name VARCHAR(40), class_id VARCHAR (10),
     foreign key(class_id) references class(id));
  
   INSERT INTO `db_demos`.`student` (`id`, `name`, `class_id`) VALUES ('1', 'G. Washington', '1');
   INSERT INTO `db_demos`.`student` (`id`, `name`, `class_id`) VALUES ('2', 'M. Gandhi', '1');
   INSERT INTO `db_demos`.`student` (`id`, `name`, `class_id`) VALUES ('3', 'N. Mandela', 'NULL');
   INSERT INTO `db_demos`.`student` (`id`, `name`, `class_id`) VALUES ('4', 'Q. Victoria', '2');

   create table class (
     id int auto_increment not null primary key,  
     itle varchar(40)); 
  
   INSERT INTO `db_demos`.`class` (`id`, `title`) VALUES ('1', 'Front End');
   INSERT INTO `db_demos`.`class` (`id`, `title`) VALUES ('2', 'Java');
   INSERT INTO `db_demos`.`class` (`id`, `title`) VALUES ('3', '.Net');


1. SELECT * FROM customers;

2. SELECT DISTINCT Country from customers;

3. SELECT * FROM customers WHERE customerid LIKE 'bl%';

4. SELECT * from orders limit 100;

5. SELECT * from customers WHERE PostalCode in ("1010", "3012", "12209", "05023");

6. SELECT * FROM orders WHERE shipregion IS NOT NULL;

7. SELECT * from customers ORDER BY Country, City;

8. INSERT INTO customers (CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, Image, ImageThumbnail)
   VALUES (10, 'ABCompany', 'Sam', 'Developer', 'Kent','Ann Arbor','Michigan', 48108, 'USA', 1112223333, 123456, null, null);


9. UPDATE orders SET ShipRegion = 'EuroZone' WHERE ShipCountry = 'France';

10. DELETE FROM `order details` WHERE Quantity = 1;

11. SELECT MAX(Quantity) ,
    AVG(Quantity) ,
    MIN(Quantity) 
    from `order details`;

12. SELECT MAX(Quantity) ,
    AVG(Quantity) ,
    MIN(Quantity) 
    from `order details` group by OrderID;

13. SELECT customerID from orders where OrderID = 10290;

14.  a. SELECT orders.OrderID, customers.CustomerID FROM orders 
        INNER JOIN customers ON orders.CustomerID = customers.customerID;
        
     b. SELECT orders.OrderID, customers.CustomerID FROM orders 
        LEFT JOIN  customers ON orders.CustomerID = customers.CustomerID 
        ORDER BY customers.CustomerID;
        
     c. SELECT orders.OrderID, customers.CustomerID FROM orders 
        RIGHT JOIN customers ON orders.CustomerID = customers.CustomerID 
        ORDER BY customers.CustomerID;

15.     Select FirstName from employees where ReportsTo IS NULL;

16.     Select FirstName from employees where ReportsTo In (Select employeeID from employees where Firstname='Andrew');